name: Process Bilingual Content

on:
  push:
    branches: [ main ]
    paths:
      - '_posts/**'
      - '_pages/**'
      - '*.md'
  pull_request:
    branches: [ main ]
    paths:
      - '_posts/**'
      - '_pages/**'
      - '*.md'

jobs:
  process-bilingual:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true
    
    - name: Find and process bilingual files
      run: |
        echo "üîç Looking for bilingual markdown files..."
        
        # Find all markdown files with bilingual: true in front matter
        bilingual_files=$(find . -name "*.md" -not -path "./_site/*" -not -path "./vendor/*" | xargs grep -l "bilingual: true" || true)
        
        if [ -z "$bilingual_files" ]; then
          echo "üìù No bilingual files found to process"
          exit 0
        fi
        
        echo "üìã Found bilingual files:"
        echo "$bilingual_files"
        
        # Process each bilingual file
        processed_count=0
        for file in $bilingual_files; do
          echo "üîÑ Processing: $file"
          
          # Check if file contains :::lang: syntax
          if grep -q ":::lang:" "$file"; then
            echo "  ‚Üí Found :::lang: syntax, processing..."
            
            # Create backup
            cp "$file" "${file}.backup"
            
            # Process the file
            if ruby scripts/bilingual_preprocessor.rb "$file"; then
              echo "  ‚úÖ Successfully processed $file"
              processed_count=$((processed_count + 1))
            else
              echo "  ‚ùå Failed to process $file, restoring backup"
              mv "${file}.backup" "$file"
            fi
            
            # Clean up backup if processing succeeded
            [ -f "${file}.backup" ] && rm "${file}.backup"
          else
            echo "  ‚Üí No :::lang: syntax found, skipping"
          fi
        done
        
        echo "üìä Processed $processed_count files"
        echo "PROCESSED_COUNT=$processed_count" >> $GITHUB_ENV
    
    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ "$PROCESSED_COUNT" -gt 0 ]; then
          if git diff --quiet; then
            echo "No changes detected after processing"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected after processing"
            echo "has_changes=true" >> $GITHUB_OUTPUT
            
            echo "üìã Changed files:"
            git diff --name-only
            
            echo "üìù Sample of changes:"
            git diff --unified=3 | head -50
          fi
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit processed files
      if: steps.verify-changed-files.outputs.has_changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        
        # Create descriptive commit message
        commit_msg="ü§ñ Auto-process bilingual content
        
        - Converted :::lang:en/:::lang:zh syntax to HTML divs
        - Processed $PROCESSED_COUNT bilingual files
        - Generated by GitHub Actions workflow
        
        [skip ci]"
        
        git commit -m "$commit_msg"
    
    - name: Push changes
      if: steps.verify-changed-files.outputs.has_changes == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref_name }}
    
    - name: Summary
      run: |
        if [ "$PROCESSED_COUNT" -gt 0 ]; then
          echo "üéâ Successfully processed $PROCESSED_COUNT bilingual files"
          echo "‚ú® Files are now ready for Jekyll to build with proper HTML structure"
        else
          echo "üìù No bilingual files needed processing"
        fi 